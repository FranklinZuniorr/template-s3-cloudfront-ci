name: Deploy Preview

on:
  workflow_call:
    inputs:
      run_tests:
        required: false
        type: boolean
        default: true
      run_lint:
        required: false
        type: boolean
        default: true
      run_tsc:
        required: false
        type: boolean
        default: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      S3_BUCKET_NAME:
        required: true
      DOMAIN:
        required: true
      CLOUDFRONT_DISTRIBUTION_ID:
        required: true
      WF_GITHUB_TOKEN:
        required: true
      GH_LINK_PROJECT_ENVS:
        required: true
      GH_LINK_PR_PROJECT_ENVS:
        required: false

jobs:
  preview:
    runs-on: ubuntu-latest

    env:
      PREVIEW_PREFIX: preview-pr-${{ github.event.pull_request.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Commit message lint
        if: inputs.run_lint == true
        uses: wagoid/commitlint-github-action@v6
        with:
          token: ${{ secrets.WF_GITHUB_TOKEN }}

      - name: Typescript check
        if: inputs.run_tsc == true
        run: yarn tsc --build

      - name: Test coverage
        if: inputs.run_tests == true
        run: yarn test:ci

      - name: Upload coverage report
        if: inputs.run_tests == true
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Comment coverage report link
        if: github.event_name == 'pull_request' && inputs.run_tests == true
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WF_GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const runId = context.runId;
            const { owner, repo } = context.repo;
            const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${runId}`;

            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner,
              repo,
              body: `📊 Coverage report uploaded as an artifact. [Click here to view it](${artifactUrl})\n
              ![Coverage GIF](https://i.giphy.com/XIqCQx02E1U9W.webp)`
            });

      - name: Create .env file from GitHub API
        env:
          GH_TOKEN: ${{ secrets.WF_GITHUB_TOKEN }}
          GH_LINK_PR_PROJECT_ENVS: ${{ secrets.GH_LINK_PR_PROJECT_ENVS }}
          GH_LINK_PROJECT_ENVS: ${{ secrets.GH_LINK_PROJECT_ENVS }}
        run: |
          LINK="${GH_LINK_PR_PROJECT_ENVS:-$GH_LINK_PROJECT_ENVS}"
      
          if [ -z "$LINK" ]; then
            echo "❌ None link provided."
            exit 1
          fi
      
          echo "📥 Downloading .env from GitHub API: $LINK"
      
          CONTENT=$(curl
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3.raw" \
            "$LINK")
      
          if [ -z "$CONTENT" ]; then
            echo "❌ Failed to download content or content is empty."
            exit 1
          fi
      
          printf "%s" "$CONTENT" > .env
      
          echo "✅ File .env created:"
          cat .env
          
      - name: Build project
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          export REACT_APP_BROWSER_ROUTER_BASENAME="/${{ env.PREVIEW_PREFIX }}"
          yarn build

      - name: Deploy to S3 preview folder
        run: |
          aws s3 sync ./build "s3://${S3_BUCKET_NAME}/${PREVIEW_PREFIX}" --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

      - name: Output Preview URL
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.WF_GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const domain = process.env.DOMAIN;
            const prefix = `preview-pr-${prNumber}`;
            const previewUrl = `https://${domain}/${prefix}/index.html`;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 Preview disponível: [${previewUrl}](${previewUrl})\n
              ![Coverage GIF](https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExZThtYmVtZThra2loajhjbmIzM2ZnNHAxZHQ4aHowcHkzZnV2Nzl5OCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ukZvSoWXXb3YKNHIsw/giphy.gif)`
            });
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
