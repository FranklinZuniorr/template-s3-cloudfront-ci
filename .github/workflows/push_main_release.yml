name: Release

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      S3_BUCKET_NAME:
        required: true
        type: string
      AWS_ACCESS_KEY_ID:
        required: true
        type: string
      AWS_SECRET_ACCESS_KEY:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      CLOUDFRONT_DISTRIBUTION_ID:
        required: true
        type: string
      GITHUB_TOKEN:
        required: true
        type: string

jobs:
  setup:
    environment: versioning
    name: preparing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: npm run build

      - name: Upload to S3
        run: |
          aws s3 sync ./build s3://$S3_BUCKET_NAME --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ inputs.AWS_REGION }}
          S3_BUCKET_NAME: ${{ inputs.S3_BUCKET_NAME }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ inputs.AWS_REGION }}
          CLOUDFRONT_DISTRIBUTION_ID: ${{ inputs.CLOUDFRONT_DISTRIBUTION_ID }}

      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        run: yarn release
